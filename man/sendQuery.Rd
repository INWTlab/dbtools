% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sendQuery.R
\name{sendQuery}
\alias{sendQuery}
\alias{sendQuery,CredentialsList,SingleQueryList-method}
\alias{sendQuery,CredentialsORCredentialsList,character-method}
\alias{sendQuery,Credentials,SingleQueryList-method}
\alias{sendQuery,DBIConnection,SingleQuery-method}
\alias{sendQuery,MySQLConnection,SingleQuery-method}
\title{Send query to database and fetch result}
\usage{
sendQuery(db, query, ...)

\S4method{sendQuery}{CredentialsList,SingleQueryList}(db, query, ..., applyFun = lapply, simplify = TRUE)

\S4method{sendQuery}{CredentialsORCredentialsList,character}(db, query, ...)

\S4method{sendQuery}{Credentials,SingleQueryList}(db, query, ..., simplify = TRUE)

\S4method{sendQuery}{DBIConnection,SingleQuery}(db, query, ...)

\S4method{sendQuery}{MySQLConnection,SingleQuery}(db, query, ..., encoding = "utf8mb4")
}
\arguments{
\item{db}{one in: \cr (\link{Credentials}) the credentials to get a
connection to a database.  \cr (DBIConnection)
\link[DBI]{DBIConnection-class} \cr (MySQLConnection)
\link[RMySQL]{MySQLConnection-class}}

\item{query}{one in: \cr (character, length >= 1) a query \cr (SingleQuery |
SingleQeuryList) \link{SingleQuery-class} is mostly used internally.}

\item{...}{one in: \cr for signature (Credentials, character |
SingleQueryList) arguments are passed to \code{reTry} \cr for signature
(CredentialsList) arguments are passed to the (Credentials) method, so
implicitly to reTry \cr else ignored}

\item{applyFun}{(function) something like lapply or mclapply}

\item{simplify}{(logical(1)) whether to simplify results. See details.}

\item{encoding}{(character | NULL) the encoding used in a \code{SET NAMES}
statement. Currently only implemented for MySQL connections. The
default is 'utf8'. Use \code{NULL} if you do not want to set the encoding.}
}
\value{
one in:
\cr \code{simplify = TRUE} (list | data.frame)
\cr \code{simplify = FALSE}: (list) with data frames or nested list of data
frames
\cr On error: (list) with 'try-catch' objects
}
\description{
This functions sends a query to a database and fetches the result.
}
\details{
\code{simplify} the default is to simplify results. If you send
  multiple queries to one database it is tried to rbind the results - when
  you have different column names this can be like a full join. If you send
  one query to multiple databases it is tried to rbind the results. If you
  send multiple queries to multiple databases, then first the results of the
  same query are tried to be rbind, and if possible also the results of each
  query. It is considered to be possible iff the names of all data frames
  belonging to each query are the same.
}
\examples{
## For an example database:
library("RSQLite")
con <- dbConnect(SQLite(), "example.db")
USArrests$State <- rownames(USArrests)
dbWriteTable(con, "USArrests", USArrests, row.names = FALSE)
dbDisconnect(con)

## Simple Query
cred <- Credentials(drv = SQLite, dbname = "example.db")
dat <- sendQuery(cred, "SELECT * FROM USArrests;")

## Multiple Similar Queries
queryFun <- function(state) {
  paste0("SELECT * FROM USArrests WHERE State = '", state, "';")
}

sendQuery(cred, queryFun(dat$row_names))

## For the Paranoid
### be a bit more cautious with connections
dat <- try(sendQuery(
  cred,
  "SELECT * FROM USArrest;", # wrong name for illustration
  tries = 2,
  intSleep = 1
))

}
